{"version":3,"sources":["theme.ts","firebase.ts","components/Login.tsx","api/contentsApi.ts","reducers/contentsReducer.ts","contexts/contentsContext.tsx","components/NewContentList.tsx","components/Concept.tsx","components/MainVisual.tsx","contexts/authContext.tsx","components/Header.tsx","components/Footer.tsx","components/Home.tsx","components/Editor.tsx","components/ContentEditorPage.tsx","api/reviewsApi.ts","reducers/reviewsReducer.ts","contexts/reviewsContext.tsx","components/ReviewList.tsx","components/ReviewPage.tsx","components/ReviewEditor.tsx","components/ReviewEditorPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["primaryTextColor","primaryColor","theme","extendTheme","styles","global","body","bg","color","minHeight","colors","primaryText","primary","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firedb","firestore","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","Login","mt","size","firebaseAuth","getContents","a","collection","get","snapShot","data","docs","map","doc","user","contentType","title","content","createdAt","toDate","id","addComment","add","Timestamp","now","initialState","contents","contentsReducer","state","action","type","ContentsContext","createContext","dispatch","ContentsProvider","children","useReducer","Provider","value","useContents","useContext","NewContentList","useEffect","then","mb","as","dots","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","console","log","ModalWindow","useDisclosure","isOpen","onOpen","onClose","className","boxShadow","rounded","p","mr","overflow","onClick","mx","pos","src","layout","textTransform","fontWeight","fontSize","letterSpacing","fontFamily","isTruncated","direction","spacing","align","photoURL","undefined","displayName","toLocaleString","alt","my","colorScheme","Concept","py","MainVisual","w","h","backgroundImage","backgroundSize","backgroundPosition","justify","px","useBreakpointValue","base","md","bgGradient","maxW","lineHeight","AuthContext","AuthProvider","useState","setUser","loading","setLoading","onAuthStateChanged","useAuth","Header","onToggle","position","top","useColorModeValue","minH","borderBottom","borderStyle","borderColor","zIndex","flex","ml","display","icon","Close","Hamburger","variant","textAlign","href","signOut","_hover","in","animateOpacity","DesktopNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","navItem","trigger","placement","textDecoration","label","border","minW","child","DesktopSubNav","subLabel","role","transition","_groupHover","transform","opacity","ChevronRightIcon","MobileNav","MobileNavItem","Link","to","ChevronDownIcon","style","marginTop","pl","borderLeft","Footer","Home","Editor","setContentType","setTitle","setContent","onSubmit","e","preventDefault","toPost","Date","alert","pb","shadow","alignItems","isRequired","placeholder","onChange","currentTarget","name","ContentEditorPage","getReviews","attribute","prefectures","municipalities","review","addReview","reviews","reviewsReducer","ReviewsContext","ReviewsProvider","useReviews","ReviewList","dataList","setPrefectures","setAttribute","freeWord","setFreeWord","filter","match","ReviewBox","Moment","format","ReviewPage","ReviewEditor","sex","setSex","setMunicipalities","setReview","ReviewEditorPage","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93177a88.chunk.js","sourcesContent":["import { extendTheme } from '@chakra-ui/react'\r\n\r\nexport const primaryTextColor = 'orange.400'\r\nexport const primaryColor = 'orange.300'\r\n\r\nexport const theme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      body: {\r\n        bg: 'gray.100',\r\n        color: 'gray.900',\r\n        minHeight: '100vh',\r\n      },\r\n    },\r\n    colors: {\r\n      primaryText: 'orange.500',\r\n      primary: 'orange.300',\r\n    },\r\n  },\r\n})","import firebase from 'firebase';\r\n\r\nconst fireConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_APPID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENTID,\r\n}\r\nfirebase.initializeApp(fireConfig)\r\nconst auth = firebase.auth()\r\nconst firedb = firebase.firestore()\r\nexport { firebase, auth, firedb }","import { Center, Heading, VStack } from '@chakra-ui/layout'\r\nimport { primaryTextColor } from '../theme'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport { firebase, auth } from '../firebase'\r\n\r\nconst uiConfig = {\r\n  signInFlow: 'popup',\r\n  signInSuccessUrl: '/',\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n  ],\r\n}\r\n\r\nexport const Login = () => {\r\n  return (\r\n    <Center mt={8}>\r\n      <VStack>\r\n        <Heading size='md' color={primaryTextColor}>\r\n          Log In\r\n        </Heading>\r\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\r\n      </VStack>\r\n    </Center>\r\n  )\r\n}","import { firedb, firebase } from '../firebase'\r\nimport { IContent, IContentAdd } from '../models'\r\n\r\nexport const getContents = async () => {\r\n  const snapShot = await firedb\r\n    .collection('contents')\r\n    .get()\r\n  const data = snapShot.docs.map<IContent>((doc) => ({\r\n    user: doc.data().user,\r\n    contentType: doc.data().contentType,\r\n    title: doc.data().title,\r\n    content: doc.data().content,\r\n    createdAt: doc.data().createdAt.toDate(),\r\n    id: doc.id,\r\n  }))\r\n  return data\r\n}\r\n\r\nexport const addComment = async (content: IContentAdd) => {\r\n  return firedb.collection('contents').add({\r\n    user: content.user,\r\n    contentType: content.contentType,\r\n    title: content.title,\r\n    content: content.content,\r\n    createdAt: firebase.firestore.Timestamp.now(),\r\n  })\r\n}\r\n","import { IContent } from '../models'\r\n\r\nexport type ContentsAction =\r\n  | { type: 'SET_CONTENTS'; contents: IContent[] }\r\n  | { type: 'ADD_CONTENT'; content: IContent }\r\n\r\nexport type ContentsState = {\r\n  contents: IContent[]\r\n}\r\n\r\nexport const initialState: ContentsState = {\r\n  contents: [],\r\n}\r\n\r\nexport const contentsReducer = (\r\n  state: ContentsState,\r\n  action: ContentsAction\r\n): ContentsState => {\r\n  switch (action.type) {\r\n    case 'SET_CONTENTS':\r\n      return { contents: action.contents }\r\n    case 'ADD_CONTENT':\r\n      return { contents: [action.content, ...state.contents] }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  createContext,\r\n  Dispatch,\r\n  ReactNode,\r\n  useReducer,\r\n  useContext,\r\n} from 'react'\r\nimport {\r\n  ContentsAction,\r\n  contentsReducer,\r\n  ContentsState,\r\n  initialState,\r\n} from '../reducers/contentsReducer'\r\n\r\ntype ContentsContextProps = {\r\n  state: ContentsState\r\n  dispatch: Dispatch<ContentsAction>\r\n}\r\n\r\nconst ContentsContext = createContext<ContentsContextProps>({\r\n  state: initialState,\r\n  dispatch: () => initialState,\r\n})\r\n\r\nexport const ContentsProvider = ({ children }: { children: ReactNode }) => {\r\n  const [state, dispatch] = useReducer(contentsReducer, initialState)\r\n  return (\r\n    <ContentsContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </ContentsContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useContents = () => useContext(ContentsContext)\r\n","import {\r\n  HStack,\r\n  Box,\r\n  Avatar,\r\n  Heading,\r\n  Text,\r\n  Center,\r\n  Stack,\r\n  Modal,\r\n  Image,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n} from '@chakra-ui/react'\r\nimport { useEffect } from 'react'\r\nimport Slider from \"react-slick\";\r\nimport { getContents } from '../api/contentsApi'\r\nimport { useContents } from '../contexts/contentsContext'\r\n\r\nimport { IContent } from '../models'\r\nimport { primaryColor } from '../theme'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"../styles/slick.css\";\r\n\r\nexport const NewContentList = () => {\r\n  const {\r\n    state: { contents },\r\n    dispatch,\r\n  } = useContents()\r\n  useEffect(() => {\r\n    getContents().then((data) => {\r\n      dispatch({ type: 'SET_CONTENTS', contents: data })\r\n    })\r\n  }, [dispatch])\r\n  const sliderSettings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Heading mt={4} mb={2} as='h2' size='lg' color='gray.600'>\r\n        新着情報\r\n      </Heading>\r\n      <Slider {...sliderSettings}>\r\n        {contents === [] ? (\r\n          <p>No Post</p>\r\n        ) : (\r\n          contents.map((content) => (\r\n            <ModalWindow key={content.id} content={content} />\r\n            \r\n          ),console.log(contents))\r\n        )}\r\n      </Slider>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ModalWindow = ({ content }: { content: IContent }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  return (\r\n    <>\r\n      <Box\r\n        className='cursor-pointer'\r\n        bg={'white'}\r\n        boxShadow={'2sm'}\r\n        rounded={'md'}\r\n        p={6}\r\n        mr={2}\r\n        overflow={'hidden'}\r\n        onClick={onOpen}\r\n      >\r\n        <Box\r\n          bg={'gray.100'}\r\n          mt={-6}\r\n          mx={-6}\r\n          mb={6}\r\n          pos={'relative'}>\r\n          <Image\r\n            src={\r\n              'https://picsum.photos/seed/picsum/300/200'\r\n            }\r\n            layout={'fill'}\r\n          />\r\n        </Box>\r\n        <Stack>\r\n          <Text\r\n            color={'green.500'}\r\n            textTransform={'uppercase'}\r\n            fontWeight={800}\r\n            fontSize={'sm'}\r\n            letterSpacing={1.1}>\r\n            {content.contentType}\r\n          </Text>\r\n          <Heading\r\n            color={'gray.700'}\r\n            fontSize={'xl'}\r\n            fontFamily={'body'}>\r\n            {content.title}\r\n          </Heading>\r\n          <Text color={'gray.900'} fontSize={'md'} isTruncated>\r\n            {content.content}\r\n          </Text>\r\n        </Stack>\r\n        <Stack mt={6} direction={'row'} spacing={4} align={'center'}>\r\n          <Avatar\r\n            size='xs'\r\n            src={content.user.photoURL ? content.user.photoURL : undefined}\r\n            bg={primaryColor}\r\n          ></Avatar>\r\n          <Stack direction={'column'} spacing={0} fontSize={'sm'}>\r\n            <Text fontWeight={600}>{content.user.displayName}</Text>\r\n            <Text color={'gray.500'}>{content.createdAt.toLocaleString()}</Text>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>{content.title}</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Center  className=\"test\">\r\n              <Image src='https://via.placeholder.com/150' alt='test' />\r\n            </Center>\r\n            <HStack mb={2}>\r\n              <Avatar\r\n                size='xs'\r\n                src={content.user.photoURL ? content.user.photoURL : undefined}\r\n                bg={primaryColor}\r\n              ></Avatar>\r\n              <Heading size='xs' color='gray.700'>\r\n                {content.user.displayName}\r\n              </Heading>\r\n            </HStack>\r\n            <Text color='gray.400' my={2} fontSize='sm' align='end'>\r\n              {content.createdAt.toLocaleString()}\r\n            </Text>\r\n            <Text>{content.content}</Text>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  )\r\n}","import { Heading, VStack, Text } from '@chakra-ui/react'\r\nimport { primaryTextColor } from '../theme'\r\n\r\nexport const Concept = () => {\r\n  return (\r\n      <VStack py={16}>\r\n        <Heading color={primaryTextColor}>このサイトについて</Heading>\r\n      <Text>\r\n        どこか地域へ移住したいと思った時、地域おこし協力隊になってみたいなと思った時、\r\n        どのように情報を集めていますか？インターネットで調べると様々な情報が出てきますが、\r\n        本当に知りたいことを知ることができますか？沢山の情報が出てきて訳が分からなくなってしまっていませんか？\r\n        そんな悩みを解決したくこのサイトを立ち上げました。\r\n        的ななんか目的とか願いとか書いておく場所\r\n      </Text>\r\n      </VStack>\r\n  )\r\n}","import { Flex, Stack, VStack, Text, useBreakpointValue } from '@chakra-ui/react'\r\n\r\nexport const MainVisual = () => {\r\n  return (\r\n    <Flex\r\n      w={'full'}\r\n      h={'100vh'}\r\n      backgroundImage={'url(https://picsum.photos/1200/600)'}\r\n      backgroundSize={'cover'}\r\n      backgroundPosition={'center center'}>\r\n      <VStack\r\n        w={'full'}\r\n        justify={'center'}\r\n        px={useBreakpointValue({ base: 4, md: 8 })}\r\n        bgGradient={'linear(to-r, blackAlpha.600, transparent)'}>\r\n        <Stack maxW={'2xl'} align={'flex-start'} spacing={6}>\r\n        <Text\r\n            color={'white'}\r\n            fontWeight={700}\r\n            lineHeight={1.2}\r\n            fontSize={useBreakpointValue({ base: '3xl', md: '4xl' })}>\r\n            Lorem ipsum dolor sit amet consectetur adipiscing elit sed do\r\n            eiusmod tempor\r\n          </Text>\r\n        </Stack>\r\n      </VStack>\r\n      </Flex>\r\n  )\r\n}","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { firebase, auth } from '../firebase'\r\n\r\ntype AuthContextProps = {\r\n  user: firebase.User | null\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextProps>({\r\n  user: null,\r\n})\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<firebase.User | any>(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setUser(user)\r\n      setLoading(false)\r\n    })\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext)\r\n}","import {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Button,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n} from '@chakra-ui/icons';\r\nimport { useAuth } from '../contexts/authContext'\r\nimport { auth } from '../firebase'\r\n\r\nexport const Header = () => {\r\n  const { user } = useAuth()\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <Box w={'full'} h={'60px'}>\r\n        <Flex\r\n          as='header'\r\n          position='fixed'\r\n          top={0}\r\n          w={'full'}\r\n          bg={useColorModeValue('white', 'gray.800')}\r\n          color={useColorModeValue('gray.600', 'white')}\r\n          minH={'60px'}\r\n          py={{ base: 2 }}\r\n          px={{ base: 4 }}\r\n          borderBottom={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n          align={'center'}\r\n          zIndex={999}>\r\n          <Flex\r\n            flex={{ base: 1, md: 'auto' }}\r\n            ml={{ base: -2 }}\r\n            display={{ base: 'flex', md: 'none' }}>\r\n            <IconButton\r\n              onClick={onToggle}\r\n              icon={\r\n                isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n              }\r\n              variant={'ghost'}\r\n              aria-label={'Toggle Navigation'}\r\n            />\r\n          </Flex>\r\n          <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n            <Text\r\n              textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n              fontFamily={'heading'}\r\n              color={useColorModeValue('gray.800', 'white')}>\r\n              Logo\r\n            </Text>\r\n\r\n            <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\r\n              <DesktopNav />\r\n            </Flex>\r\n          </Flex>\r\n\r\n          <Stack\r\n            flex={{ base: 1, md: 0 }}\r\n            justify={'flex-end'}\r\n            direction={'row'}\r\n            spacing={6}>\r\n            {user ? (\r\n              <Button\r\n                display={{ base: 'none', md: 'inline-flex' }}\r\n                fontSize={'sm'}\r\n                fontWeight={600}\r\n                color={'white'}\r\n                bg={'pink.400'}\r\n                href={'#'}\r\n                onClick={() => auth.signOut()}\r\n                _hover={{\r\n                  bg: 'pink.300',\r\n                }}>\r\n                Log Out\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                as={'a'}\r\n                fontSize={'sm'}\r\n                fontWeight={400}\r\n                variant={'link'}\r\n                href={'/login'}>\r\n                Sign In\r\n              </Button>\r\n\r\n            )\r\n            }\r\n\r\n          </Stack>\r\n        </Flex>\r\n\r\n        <Collapse in={isOpen} animateOpacity>\r\n          <MobileNav />\r\n        </Collapse>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={4}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                href={navItem.href ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            _groupHover={{ color: 'pink.400' }}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        to={href ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} to={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface NavItem {\r\n  label: string;\r\n  subLabel?: string;\r\n  children?: Array<NavItem>;\r\n  href?: string;\r\n}\r\nexport const NAV_ITEMS: Array<NavItem> = [\r\n  {\r\n    label: 'TOP',\r\n    href: '/'\r\n  },\r\n  {\r\n    label: '投稿',\r\n    href: '/editor'\r\n  },\r\n  {\r\n    label: '口コミ',\r\n    href: '/review'\r\n  },\r\n  {\r\n    label: '口コミ投稿',\r\n    href: '/revieweditor'\r\n  }\r\n];","import { Text, Box } from '@chakra-ui/layout'\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <Box>\r\n      <Text align='center' color='gray.600' fontSize='sm'>\r\n        Copyright: <a href='https://matsuzawa.dev'>matuzawa</a>\r\n      </Text>\r\n    </Box>\r\n  )\r\n}","import { NewContentList } from './NewContentList'\r\nimport { Concept } from './Concept'\r\nimport { MainVisual } from './MainVisual'\r\nimport { Header } from './Header'\r\nimport { Footer } from './Footer'\r\nimport { Container } from '@chakra-ui/layout'\r\nexport const Home = () => (\r\n  <>\r\n    <Header />\r\n    <MainVisual />\r\n    <Container px={2} maxW='container.lg'>\r\n      <NewContentList />\r\n      <Concept />\r\n    </Container>\r\n    <Footer />\r\n  </>\r\n)","import { Button, Container, Text, Input, Textarea, VStack, FormControl, FormLabel, Select } from '@chakra-ui/react'\r\nimport { useState } from 'react'\r\nimport { addComment } from '../api/contentsApi'\r\nimport { useAuth } from '../contexts/authContext'\r\nimport { useContents } from '../contexts/contentsContext'\r\nimport { IContentAdd } from '../models'\r\n\r\nexport const Editor = () => {\r\n  const { user } = useAuth()\r\n  const { dispatch } = useContents()\r\n  const [contentType, setContentType] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (content !== '' && user) {\r\n      const toPost: IContentAdd = {\r\n        user: { displayName: user.displayName, photoURL: user.photoURL },\r\n        contentType,\r\n        title,\r\n        content,\r\n      }\r\n      addComment({ ...toPost })\r\n      dispatch({\r\n        type: 'ADD_CONTENT',\r\n        content: {\r\n          ...toPost,\r\n          createdAt: new Date(),\r\n          id: Date(),\r\n        },\r\n      })\r\n    } else if (!user) {\r\n      alert('Sign in first')\r\n    }\r\n    setContentType('')\r\n    setTitle('')\r\n    setContent('')\r\n  }\r\n  const contentTypeChange = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    setContentType(e.currentTarget.value)\r\n  }\r\n  const titleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setTitle(e.currentTarget.value)\r\n  }\r\n  const handleChange = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n    setContent(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <Container maxW=\"container.lg\">\r\n      {user ? <Text>welcome back, {user.displayName}! </Text> : null}\r\n      <VStack\r\n        as='form'\r\n        onSubmit={handleSubmit}\r\n        p={4}\r\n        pb={2}\r\n        bg='white'\r\n        rounded='md'\r\n        shadow='md'\r\n        alignItems='flex-start'\r\n      >\r\n        <FormControl id=\"contentType\" isRequired>\r\n          <FormLabel>投稿の種類</FormLabel>\r\n          <Select placeholder=\"投稿の種類を選んでください。\" value={contentType} onChange={contentTypeChange}>\r\n            <option>活動紹介</option>\r\n            <option>イベントの宣伝</option>\r\n            <option>町の紹介</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl id='title' isRequired>\r\n          <FormLabel>タイトル</FormLabel>\r\n          <Input value={title} onChange={titleChange} size='md' placeholder=\"投稿タイトル\" />\r\n        </FormControl>\r\n        <FormControl id='content' isRequired>\r\n          <FormLabel>内容</FormLabel>\r\n          <Textarea\r\n            name='content'\r\n            value={content}\r\n            onChange={handleChange}\r\n            placeholder=\"投稿内容\"\r\n          />\r\n        </FormControl>\r\n        <div className='arign-right'>\r\n          <Button type='submit' colorScheme='orange'>\r\n            投稿\r\n          </Button>\r\n        </div>\r\n      </VStack>\r\n    </Container>\r\n  )\r\n}","import { Header } from './Header'\r\nimport { Editor } from './Editor'\r\nimport { Footer } from './Footer'\r\nimport { Container } from '@chakra-ui/layout'\r\nexport const ContentEditorPage = () => (\r\n  <>\r\n    <Header />\r\n    <Container px={2} maxW='container.lg'>\r\n      <Editor />\r\n    </Container>\r\n    <Footer />\r\n  </>\r\n)","import { firedb, firebase } from '../firebase'\r\nimport { IReview, IReviewAdd } from '../models'\r\n\r\nexport const getReviews = async () => {\r\n  const snapShot = await firedb\r\n    .collection('reviews')\r\n    .get()\r\n  const data = snapShot.docs.map<IReview>((doc) => ({\r\n    user: doc.data().user,\r\n    attribute: doc.data().attribute,\r\n    prefectures: doc.data().prefectures,\r\n    municipalities: doc.data().municipalities,\r\n    review: doc.data().review,\r\n    createdAt: doc.data().createdAt.toDate(),\r\n    id: doc.id,\r\n  }))\r\n  return data\r\n}\r\n\r\nexport const addReview = async (review: IReviewAdd) => {\r\n  return firedb.collection('reviews').add({\r\n    user: review.user,\r\n    attribute: review.attribute,\r\n    prefectures: review.prefectures,\r\n    municipalities: review.municipalities,\r\n    review: review.review,\r\n    createdAt: firebase.firestore.Timestamp.now(),\r\n  })\r\n}\r\n","import { IReview } from '../models'\r\n\r\nexport type ReviewsAction =\r\n  | { type: 'SET_REVIEWS'; reviews: IReview[] }\r\n  | { type: 'ADD_REVIEW'; review: IReview }\r\n\r\nexport type ReviewsState = {\r\n  reviews: IReview[]\r\n}\r\n\r\nexport const initialState: ReviewsState = {\r\n  reviews: [],\r\n}\r\n\r\nexport const reviewsReducer = (\r\n  state: ReviewsState,\r\n  action: ReviewsAction\r\n): ReviewsState => {\r\n  switch (action.type) {\r\n    case 'SET_REVIEWS':\r\n      return { reviews: action.reviews }\r\n    case 'ADD_REVIEW':\r\n      return { reviews: [action.review, ...state.reviews] }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  createContext,\r\n  Dispatch,\r\n  ReactNode,\r\n  useReducer,\r\n  useContext,\r\n} from 'react'\r\nimport {\r\n  ReviewsAction,\r\n  reviewsReducer,\r\n  ReviewsState,\r\n  initialState,\r\n} from '../reducers/reviewsReducer'\r\n\r\ntype ReviewsContextProps = {\r\n  state: ReviewsState\r\n  dispatch: Dispatch<ReviewsAction>\r\n}\r\n\r\nconst ReviewsContext = createContext<ReviewsContextProps>({\r\n  state: initialState,\r\n  dispatch: () => initialState,\r\n})\r\n\r\nexport const ReviewsProvider = ({ children }: { children: ReactNode }) => {\r\n  const [state, dispatch] = useReducer(reviewsReducer, initialState)\r\n  return (\r\n    <ReviewsContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </ReviewsContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useReviews = () => useContext(ReviewsContext)\r\n","import {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Stack,\r\n  Input,\r\n  Button,\r\n} from '@chakra-ui/react'\r\nimport { useEffect, useState } from 'react'\r\nimport { getReviews } from '../api/reviewsApi'\r\nimport { useReviews } from '../contexts/reviewsContext'\r\n\r\n\r\nimport { IReview } from '../models'\r\nimport Moment from 'moment'\r\n\r\nexport const ReviewList = () => {\r\n  \r\n  const {\r\n    state: { reviews },\r\n    dispatch,\r\n  } = useReviews()\r\n  useEffect(() => {\r\n    getReviews().then((data) => {\r\n      dispatch({ type: 'SET_REVIEWS', reviews: data })\r\n    })\r\n  }, [dispatch])\r\n  //検索用\r\n  let dataList = reviews\r\n  const [prefectures, setPrefectures] = useState('')\r\n  const [attribute, setAttribute] = useState('')\r\n  const [freeWord, setFreeWord] = useState('')\r\n  const prefecturesChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setPrefectures(e.currentTarget.value)\r\n  }\r\n  const attributeChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setAttribute(e.currentTarget.value)\r\n  }\r\n  const freeWordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setFreeWord(e.currentTarget.value)\r\n  }\r\n  const handleClick = (e: React.FormEvent) => {\r\n    if (prefectures !== '') {\r\n      dataList.filter(value=> value.prefectures === prefectures)\r\n    }\r\n    if (attribute !== '') {\r\n      dataList.filter(value=> value.attribute === attribute)\r\n    }\r\n    if (freeWord !== '') {\r\n      dataList.filter(value=> value.review.match(freeWord))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Heading mb={2} as='h2' size='lg' color='gray.600'>\r\n          レビュー\r\n        </Heading>\r\n        <Stack as='form'>\r\n          <Input placeholder='都道府県からさがず' value={prefectures || ''} onChange={prefecturesChange} />\r\n          <Input placeholder='所属からさがす' value={attribute || ''} onChange={attributeChange}/>\r\n          <Input placeholder='フリーワード検索' value={freeWord || ''} onChange={freeWordChange} />\r\n          <Button onClick={handleClick}>検索</Button>\r\n        </Stack>\r\n        {dataList === [] ? (\r\n          <p>No Post</p>\r\n        ) : (\r\n            \r\n          dataList.map((review) => (\r\n            <ReviewBox key={review.id} review={review} />\r\n          ))\r\n        )}\r\n        {console.log(dataList)}\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ReviewBox = ({ review }: { review: IReview }) => {\r\n  return (\r\n    <>\r\n      <Box\r\n        bg={'white'}\r\n        boxShadow={'2sm'}\r\n        rounded={'md'}\r\n        p={6}\r\n        mr={2}\r\n        mb={2}\r\n        overflow={'hidden'}\r\n      >\r\n        <Stack>\r\n          <Stack direction={'row'} spacing={3} fontSize={'sm'}>\r\n            <Text color={'green.800'}>{review.prefectures}</Text>\r\n            <Text color={'green.800'}>{review.municipalities}</Text>\r\n            <Text color={'green.800'}>の口コミ情報</Text>\r\n          </Stack>\r\n          <Stack direction={'row'} spacing={3} fontSize={'md'}>\r\n            <Text\r\n              color={'gray.800'}\r\n              textTransform={'uppercase'}\r\n              fontSize={'sm'}\r\n              letterSpacing={1.1}>\r\n              回答者：\r\n            </Text>\r\n            <Text\r\n              color={'gray.500'}\r\n              textTransform={'uppercase'}\r\n              fontSize={'sm'}\r\n              letterSpacing={1.1}>\r\n              {review.attribute}\r\n            </Text>\r\n          </Stack>\r\n\r\n          <Text color={'gray.900'} fontSize={'md'}>\r\n            口コミ：\r\n          </Text>\r\n          <Text color={'gray.900'} fontSize={'md'}>\r\n            {review.review}\r\n          </Text>\r\n        </Stack>\r\n        <Stack mt={6} direction={'row'} spacing={4} align={'center'} fontSize={'sm'}>\r\n        <Text color={'gray.500'}>口コミ投稿日：</Text>\r\n          <Text color={'gray.500'}>{Moment(review.createdAt).format('YYYY-MM-DD')}</Text>\r\n\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  )\r\n}","import { Header } from './Header'\r\nimport { ReviewList } from './ReviewList'\r\nimport { Footer } from './Footer'\r\nimport { Container } from '@chakra-ui/layout'\r\nexport const ReviewPage = () => (\r\n  <>\r\n    <Header />\r\n    <Container px={2} maxW='container.lg'>\r\n      <ReviewList />\r\n    </Container>\r\n    <Footer />\r\n  </>\r\n)","import { Button, Container, Text, Textarea, VStack, FormControl, FormLabel, Select } from '@chakra-ui/react'\r\nimport { useState } from 'react'\r\nimport { addReview } from '../api/reviewsApi'\r\nimport { useAuth } from '../contexts/authContext'\r\nimport { useReviews } from '../contexts/reviewsContext'\r\nimport { IReviewAdd } from '../models'\r\n\r\nexport const ReviewEditor = () => {\r\n  const { user } = useAuth()\r\n  const { dispatch } = useReviews()\r\n  const [sex, setSex] = useState('')\r\n  const [attribute, setAttribute] = useState('')\r\n  const [prefectures, setPrefectures] = useState('')\r\n  const [municipalities, setMunicipalities] = useState('')\r\n  const [review, setReview] = useState('')\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (review !== '' && user) {\r\n      const toPost: IReviewAdd = {\r\n        user: { displayName: user.displayName, photoURL: user.photoURL },\r\n        sex,\r\n        attribute,\r\n        prefectures,\r\n        municipalities,\r\n        review,\r\n      }\r\n      addReview({ ...toPost })\r\n      dispatch({\r\n        type: 'ADD_REVIEW',\r\n        review: {\r\n          ...toPost,\r\n          createdAt: new Date(),\r\n          id: Date(),\r\n        },\r\n      })\r\n    } else if (!user) {\r\n      alert('Sign in first')\r\n    }\r\n    setSex('')\r\n    setAttribute('')\r\n    setPrefectures('')\r\n    setMunicipalities('')\r\n    setReview('')\r\n  }\r\n  const sexChange = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    setSex(e.currentTarget.value)\r\n  }\r\n  const attributeChange = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    setAttribute(e.currentTarget.value)\r\n  }\r\n  const prefecturesChange = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    setPrefectures(e.currentTarget.value)\r\n  }\r\n  const municipalitiesChange = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    setMunicipalities(e.currentTarget.value)\r\n  }\r\n  const reviewChange = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n    setReview(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <Container maxW=\"container.lg\">\r\n      {user ? <Text>welcome back, {user.displayName}! </Text> : null}\r\n      <VStack\r\n        as='form'\r\n        onSubmit={handleSubmit}\r\n        p={4}\r\n        pb={2}\r\n        bg='white'\r\n        rounded='md'\r\n        shadow='md'\r\n        alignItems='flex-start'\r\n      >\r\n        <FormControl id=\"sex\" isRequired>\r\n          <FormLabel>性別</FormLabel>\r\n          <Select placeholder=\"性別を選んでください。\" value={sex} onChange={sexChange}>\r\n            <option>男性</option>\r\n            <option>女性</option>\r\n            <option>その他</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl id=\"attribute\" isRequired>\r\n          <FormLabel>属性</FormLabel>\r\n          <Select placeholder=\"属性の種類を選んでください。\" value={attribute} onChange={attributeChange}>\r\n            <option>地域活動団体</option>\r\n            <option>個人(協力隊等)</option>\r\n            <option>その他</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl id=\"prefectures\" isRequired>\r\n          <FormLabel>都道府県</FormLabel>\r\n          <Select placeholder=\"都道府県を選んでください。\" value={prefectures} onChange={prefecturesChange}>\r\n            <option>○○県</option>\r\n            <option>○×県</option>\r\n            <option>●◇県</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl id=\"municipalities\" isRequired>\r\n          <FormLabel>市町村</FormLabel>\r\n          <Select placeholder=\"市町村を選んでください。\" value={municipalities} onChange={municipalitiesChange}>\r\n            <option>○○市</option>\r\n            <option>○×町</option>\r\n            <option>●◇村</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl id='review' isRequired>\r\n          <FormLabel>内容</FormLabel>\r\n          <Textarea\r\n            name='review'\r\n            value={review}\r\n            onChange={reviewChange}\r\n            placeholder=\"レビュー\"\r\n          />\r\n        </FormControl>\r\n        <div className='arign-right'>\r\n          <Button type='submit' colorScheme='orange'>\r\n            投稿\r\n          </Button>\r\n        </div>\r\n      </VStack>\r\n    </Container>\r\n  )\r\n}","import { Header } from './Header'\r\nimport { ReviewEditor } from './ReviewEditor'\r\nimport { Footer } from './Footer'\r\nimport { Container } from '@chakra-ui/layout'\r\nexport const ReviewEditorPage = () => (\r\n  <>\r\n    <Header />\r\n    <Container px={2} maxW='container.lg'>\r\n      <ReviewEditor />\r\n    </Container>\r\n    <Footer />\r\n  </>\r\n)","import { ChakraProvider } from '@chakra-ui/react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { theme } from './theme'\nimport { Login } from './components/Login'\nimport { Home } from './components/Home'\nimport { ContentEditorPage } from './components/ContentEditorPage'\nimport { ReviewPage } from './components/ReviewPage'\nimport { ReviewEditorPage } from './components/ReviewEditorPage'\nimport { AuthProvider } from './contexts/authContext'\nimport { ContentsProvider } from './contexts/contentsContext'\nimport { ReviewsProvider } from './contexts/reviewsContext'\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ChakraProvider theme={theme}>\n          <ReviewsProvider>\n          <Router>\n            <Switch>\n              <Route path='/review' component={ReviewPage} />\n              <Route path='/revieweditor' component={ReviewEditorPage} />\n            </Switch>\n          </Router>\n          </ReviewsProvider>\n        <ContentsProvider>\n          <Router>\n            <Switch>\n              <Route path='/' exact component={Home} />\n              <Route path='/editor' component={ContentEditorPage} />\n              <Route path='/login' exact component={Login} />\n            </Switch>\n          </Router>\n        </ContentsProvider>\n          <Router>\n            <Switch>\n              <Route path='/login' exact component={Login} />\n            </Switch>\n          </Router>\n      </ChakraProvider>\n    </AuthProvider>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}