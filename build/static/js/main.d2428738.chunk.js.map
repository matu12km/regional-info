{"version":3,"sources":["firebase.ts","contexts/authContext.tsx","components/Header.tsx","theme.ts","components/Login.tsx","api/contentsApi.ts","reducers/contentsReducer.ts","contexts/contentsContext.tsx","components/NewContentList.tsx","components/Concept.tsx","components/MainVisual.tsx","components/Footer.tsx","components/Home.tsx","components/Editor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firedb","firestore","AuthContext","createContext","user","AuthProvider","children","useState","setUser","loading","setLoading","useEffect","onAuthStateChanged","Provider","value","useAuth","useContext","Header","useDisclosure","isOpen","onToggle","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","align","flex","md","ml","display","onClick","icon","Close","w","h","Hamburger","variant","justify","textAlign","useBreakpointValue","fontFamily","direction","spacing","fontSize","fontWeight","href","signOut","_hover","as","in","animateOpacity","DesktopNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","trigger","placement","p","textDecoration","label","border","boxShadow","rounded","minW","child","DesktopSubNav","subLabel","role","transition","_groupHover","transform","opacity","ChevronRightIcon","MobileNav","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","primaryTextColor","primaryColor","theme","extendTheme","styles","global","body","minHeight","colors","primaryText","primary","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","Login","size","firebaseAuth","getContents","a","collection","get","snapShot","data","docs","doc","contentType","title","content","createdAt","toDate","id","addComment","add","Timestamp","now","initialState","contents","commentsReducer","state","action","type","ContentsContext","dispatch","ContentsProvider","useReducer","useContents","NewContentList","then","mb","dots","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","ModalWindow","onOpen","onClose","className","mr","overflow","mx","pos","src","layout","textTransform","letterSpacing","isTruncated","photoURL","undefined","displayName","toLocaleString","alt","my","colorScheme","Concept","MainVisual","Footer","Home","maxW","Editor","setContentType","setTitle","setContent","onSubmit","e","preventDefault","toPost","Date","alert","pb","shadow","alignItems","isRequired","placeholder","onChange","currentTarget","name","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2428738.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst fireConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_APPID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENTID,\r\n}\r\nfirebase.initializeApp(fireConfig)\r\nconst auth = firebase.auth()\r\nconst firedb = firebase.firestore()\r\nexport { firebase, auth, firedb }","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { firebase, auth } from '../firebase'\r\n\r\ntype AuthContextProps = {\r\n  user: firebase.User | null\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextProps>({\r\n  user: null,\r\n})\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<firebase.User | any>(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setUser(user)\r\n      setLoading(false)\r\n    })\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext)\r\n}","import {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Button,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n} from '@chakra-ui/icons';\r\nimport { useAuth } from '../contexts/authContext'\r\nimport { auth } from '../firebase'\r\n\r\nexport const Header = () => {\r\n  const { user } = useAuth()\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Box>\r\n      <Flex\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        color={useColorModeValue('gray.600', 'white')}\r\n        minH={'60px'}\r\n        py={{ base: 2 }}\r\n        px={{ base: 4 }}\r\n        borderBottom={1}\r\n        borderStyle={'solid'}\r\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n        align={'center'}>\r\n        <Flex\r\n          flex={{ base: 1, md: 'auto' }}\r\n          ml={{ base: -2 }}\r\n          display={{ base: 'flex', md: 'none' }}>\r\n          <IconButton\r\n            onClick={onToggle}\r\n            icon={\r\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n            }\r\n            variant={'ghost'}\r\n            aria-label={'Toggle Navigation'}\r\n          />\r\n        </Flex>\r\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n          <Text\r\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n            fontFamily={'heading'}\r\n            color={useColorModeValue('gray.800', 'white')}>\r\n            Logo\r\n          </Text>\r\n\r\n          <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\r\n            <DesktopNav />\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Stack\r\n          flex={{ base: 1, md: 0 }}\r\n          justify={'flex-end'}\r\n          direction={'row'}\r\n          spacing={6}>\r\n          {user ? (\r\n             <Button\r\n             display={{ base: 'none', md: 'inline-flex' }}\r\n             fontSize={'sm'}\r\n             fontWeight={600}\r\n             color={'white'}\r\n             bg={'pink.400'}\r\n              href={'#'}\r\n              onClick={() => auth.signOut()}\r\n             _hover={{\r\n               bg: 'pink.300',\r\n             }}>\r\n             Log Out\r\n           </Button>\r\n          ) : (\r\n          <Button\r\n            as={'a'}\r\n            fontSize={'sm'}\r\n            fontWeight={400}\r\n              variant={'link'}\r\n            href={'/login'}>\r\n            Sign In\r\n          </Button>\r\n              \r\n          )\r\n        }\r\n         \r\n        </Stack>\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <MobileNav />\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={4}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                href={navItem.href ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            _groupHover={{ color: 'pink.400' }}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        href={href ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} href={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface NavItem {\r\n  label: string;\r\n  subLabel?: string;\r\n  children?: Array<NavItem>;\r\n  href?: string;\r\n}\r\nexport const NAV_ITEMS: Array<NavItem> = [\r\n  {\r\n    label: 'TOP',\r\n    href: '/'\r\n  },\r\n  {\r\n    label: '投稿',\r\n    href: '/editor'\r\n  },\r\n];","import { extendTheme } from '@chakra-ui/react'\r\n\r\nexport const primaryTextColor = 'orange.400'\r\nexport const primaryColor = 'orange.300'\r\n\r\nexport const theme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      body: {\r\n        bg: 'gray.100',\r\n        color: 'gray.900',\r\n        minHeight: '100vh',\r\n      },\r\n    },\r\n    colors: {\r\n      primaryText: 'orange.500',\r\n      primary: 'orange.300',\r\n    },\r\n  },\r\n})","import { Center, Heading, VStack } from '@chakra-ui/layout'\r\nimport { primaryTextColor } from '../theme'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport { firebase, auth } from '../firebase'\r\n\r\nconst uiConfig = {\r\n  signInFlow: 'popup',\r\n  signInSuccessUrl: '/',\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n  ],\r\n}\r\n\r\nexport const Login = () => {\r\n  return (\r\n    <Center mt={8}>\r\n      <VStack>\r\n        <Heading size='md' color={primaryTextColor}>\r\n          Log In\r\n        </Heading>\r\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\r\n      </VStack>\r\n    </Center>\r\n  )\r\n}","import { firedb, firebase } from '../firebase'\r\nimport { IContent, IContentAdd } from '../models'\r\n\r\nexport const getContents = async () => {\r\n  const snapShot = await firedb\r\n    .collection('contents')\r\n    \r\n    .get()\r\n  const data = snapShot.docs.map<IContent>((doc) => ({\r\n    user: doc.data().user,\r\n    contentType: doc.data().contentType,\r\n    title: doc.data().title,\r\n    content: doc.data().content,\r\n    createdAt: doc.data().createdAt.toDate(),\r\n    id: doc.id,\r\n  }))\r\n  return data\r\n}\r\n\r\nexport const addComment = async (content: IContentAdd) => {\r\n  return firedb.collection('contents').add({\r\n    user: content.user,\r\n    contentType: content.contentType,\r\n    title: content.title,\r\n    content: content.content,\r\n    createdAt: firebase.firestore.Timestamp.now(),\r\n  })\r\n}\r\n","  \r\nimport { IContent } from '../models'\r\n\r\nexport type ContentsAction =\r\n  | { type: 'SET_CONTENTS'; contents: IContent[] }\r\n  | { type: 'ADD_CONTENT'; content: IContent }\r\n\r\nexport type ContentsState = {\r\n  contents: IContent[]\r\n}\r\n\r\nexport const initialState: ContentsState = {\r\n  contents: [],\r\n}\r\n\r\nexport const commentsReducer = (\r\n  state: ContentsState,\r\n  action: ContentsAction\r\n): ContentsState => {\r\n  switch (action.type) {\r\n    case 'SET_CONTENTS':\r\n      return { contents: action.contents }\r\n    case 'ADD_CONTENT':\r\n      return { contents: [action.content, ...state.contents] }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  createContext,\r\n  Dispatch,\r\n  ReactNode,\r\n  useReducer,\r\n  useContext,\r\n} from 'react'\r\nimport {\r\n  ContentsAction,\r\n  commentsReducer,\r\n  ContentsState,\r\n  initialState,\r\n} from '../reducers/contentsReducer'\r\n\r\ntype ContentsContextProps = {\r\n  state: ContentsState\r\n  dispatch: Dispatch<ContentsAction>\r\n}\r\n\r\nconst ContentsContext = createContext<ContentsContextProps>({\r\n  state: initialState,\r\n  dispatch: () => initialState,\r\n})\r\n\r\nexport const ContentsProvider = ({ children }: { children: ReactNode }) => {\r\n  const [state, dispatch] = useReducer(commentsReducer, initialState)\r\n  return (\r\n    <ContentsContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </ContentsContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useContents = () => useContext(ContentsContext)\r\n","import {\r\n  HStack,\r\n  Box,\r\n  Avatar,\r\n  Heading,\r\n  Text,\r\n  Center,\r\n  Stack,\r\n  Modal,\r\n  Image,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n} from '@chakra-ui/react'\r\nimport { useEffect } from 'react'\r\nimport Slider from \"react-slick\";\r\nimport { getContents } from '../api/contentsApi'\r\nimport { useContents } from '../contexts/contentsContext'\r\n\r\nimport { IContent } from '../models'\r\nimport { primaryColor } from '../theme'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"../styles/slick.css\";\r\n\r\nexport const NewContentList = () => {\r\n  const {\r\n    state: { contents },\r\n    dispatch,\r\n  } = useContents()\r\n  useEffect(() => {\r\n    getContents().then((data) => {\r\n      dispatch({ type: 'SET_CONTENTS', contents: data })\r\n    })\r\n  }, [dispatch])\r\n  const sliderSettings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Heading mt={4} mb={2} as='h2' size='lg' color='gray.600'>\r\n        新着情報\r\n      </Heading>\r\n      <Slider {...sliderSettings}>\r\n        {contents === [] ? (\r\n          <p>No Post</p>\r\n        ) : (\r\n          contents.map((content) => (\r\n            <ModalWindow key={content.id} content={content} />\r\n          ))\r\n        )}\r\n      </Slider>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ModalWindow = ({ content }: { content: IContent }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  return (\r\n    <>\r\n      <Box\r\n        className='cursor-pointer'\r\n        bg={'white'}\r\n        boxShadow={'2sm'}\r\n        rounded={'md'}\r\n        p={6}\r\n        mr={2}\r\n        overflow={'hidden'}\r\n        onClick={onOpen}\r\n      >\r\n        <Box\r\n          bg={'gray.100'}\r\n          mt={-6}\r\n          mx={-6}\r\n          mb={6}\r\n          pos={'relative'}>\r\n          <Image\r\n            src={\r\n              'https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\r\n            }\r\n            layout={'fill'}\r\n          />\r\n        </Box>\r\n        <Stack>\r\n          <Text\r\n            color={'green.500'}\r\n            textTransform={'uppercase'}\r\n            fontWeight={800}\r\n            fontSize={'sm'}\r\n            letterSpacing={1.1}>\r\n            {content.contentType}\r\n          </Text>\r\n          <Heading\r\n            color={'gray.700'}\r\n            fontSize={'2xl'}\r\n            fontFamily={'body'}>\r\n            {content.title}\r\n          </Heading>\r\n          <Text color={'gray.500'} isTruncated>\r\n            {content.content}\r\n          </Text>\r\n        </Stack>\r\n        <Stack mt={6} direction={'row'} spacing={4} align={'center'}>\r\n          <Avatar\r\n            size='xs'\r\n            src={content.user.photoURL ? content.user.photoURL : undefined}\r\n            bg={primaryColor}\r\n          ></Avatar>\r\n          <Stack direction={'column'} spacing={0} fontSize={'sm'}>\r\n            <Text fontWeight={600}>{content.user.displayName}</Text>\r\n            <Text color={'gray.500'}>{content.createdAt.toLocaleString()}</Text>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>{content.title}</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Center  className=\"test\">\r\n              <Image src='https://via.placeholder.com/150' alt='test' />\r\n            </Center>\r\n            <HStack mb={2}>\r\n              <Avatar\r\n                size='xs'\r\n                src={content.user.photoURL ? content.user.photoURL : undefined}\r\n                bg={primaryColor}\r\n              ></Avatar>\r\n              <Heading size='xs' color='gray.700'>\r\n                {content.user.displayName}\r\n              </Heading>\r\n            </HStack>\r\n            <Text color='gray.400' my={2} fontSize='sm' align='end'>\r\n              {content.createdAt.toLocaleString()}\r\n            </Text>\r\n            <Text>{content.content}</Text>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  )\r\n}","import { Heading, VStack, Text } from '@chakra-ui/react'\r\nimport { primaryTextColor } from '../theme'\r\n\r\nexport const Concept = () => {\r\n  return (\r\n      <VStack py={16}>\r\n        <Heading color={primaryTextColor}>このサイトについて</Heading>\r\n      <Text>\r\n        どこか地域へ移住したいと思った時、地域おこし協力隊になってみたいなと思った時、\r\n        どのように情報を集めていますか？インターネットで調べると様々な情報が出てきますが、\r\n        本当に知りたいことを知ることができますか？沢山の情報が出てきて訳が分からなくなってしまっていませんか？\r\n        そんな悩みを解決したくこのサイトを立ち上げました。\r\n        的ななんか目的とか願いとか書いておく場所\r\n      </Text>\r\n      </VStack>\r\n  )\r\n}","import { Center, Heading, VStack } from '@chakra-ui/react'\r\nimport { primaryTextColor } from '../theme'\r\n\r\nexport const MainVisual = () => {\r\n  return (\r\n    <Center>\r\n      <VStack py={16}>\r\n        <Heading color={primaryTextColor}>地域情報</Heading>\r\n        \r\n      </VStack>\r\n    </Center>\r\n  )\r\n}","import { Text, Box } from '@chakra-ui/layout'\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <Box>\r\n      <Text align='center' color='gray.600' fontSize='sm'>\r\n        Copyright: <a href='https://matsuzawa.dev'>matuzawa</a>\r\n      </Text>\r\n    </Box>\r\n  )\r\n}","import { NewContentList } from './NewContentList'\r\nimport { Concept } from './Concept'\r\nimport { MainVisual } from './MainVisual'\r\nimport { Footer } from './Footer'\r\nimport { Container } from '@chakra-ui/layout'\r\nexport const Home = () => (\r\n  <Container px={2} maxW='container.lg'>\r\n    <MainVisual />\r\n    <NewContentList />\r\n    <Concept />\r\n    <Footer />\r\n  </Container>\r\n)","import { Button, Container, Text, Input, Textarea, VStack, FormControl, FormLabel, Select } from '@chakra-ui/react'\r\nimport { useState } from 'react'\r\nimport { addComment } from '../api/contentsApi'\r\nimport { useAuth } from '../contexts/authContext'\r\nimport { useContents } from '../contexts/contentsContext'\r\nimport { IContentAdd } from '../models'\r\n\r\nexport const Editor = () => {\r\n  const { user } = useAuth()\r\n  const { dispatch } = useContents()\r\n  const [contentType, setContentType] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (content !== '' && user) {\r\n      const toPost: IContentAdd = {\r\n        user: { displayName: user.displayName, photoURL: user.photoURL },\r\n        contentType,\r\n        title,\r\n        content,\r\n      }\r\n      addComment({ ...toPost })\r\n      dispatch({\r\n        type: 'ADD_CONTENT',\r\n        content: {\r\n          ...toPost,\r\n          createdAt: new Date(),\r\n          id: Date(),\r\n        },\r\n      })\r\n    } else if (!user) {\r\n      alert('Sign in first')\r\n    }\r\n    setContentType('')\r\n    setTitle('')\r\n    setContent('')\r\n  }\r\n  const contentTypeChange = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    setContentType(e.currentTarget.value)\r\n  }\r\n  const titleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setTitle(e.currentTarget.value)\r\n  }\r\n  const handleChange = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n    setContent(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <Container maxW=\"container.lg\">\r\n      {user ? <Text>welcome back, {user.displayName}! </Text> : null}\r\n      <VStack\r\n        as='form'\r\n        onSubmit={handleSubmit}\r\n        p={4}\r\n        pb={2}\r\n        bg='white'\r\n        rounded='md'\r\n        shadow='md'\r\n        alignItems='flex-start'\r\n      >\r\n        <FormControl id=\"contentType\" isRequired>\r\n          <FormLabel>投稿の種類</FormLabel>\r\n          <Select placeholder=\"投稿の種類を選んでください。\" value={contentType} onChange={contentTypeChange}>\r\n            <option>活動紹介</option>\r\n            <option>イベントの宣伝</option>\r\n            <option>町の紹介</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl id='title' isRequired>\r\n          <FormLabel>タイトル</FormLabel>\r\n          <Input value={title} onChange={titleChange} size='md' placeholder=\"投稿タイトル\" />\r\n        </FormControl>\r\n        <FormControl id='content' isRequired>\r\n          <FormLabel>内容</FormLabel>\r\n          <Textarea\r\n            name='content'\r\n            value={content}\r\n            onChange={handleChange}\r\n            placeholder=\"投稿内容\"\r\n          />\r\n        </FormControl>\r\n        <div className='arign-right'>\r\n          <Button type='submit' colorScheme='orange'>\r\n            投稿\r\n          </Button>\r\n        </div>\r\n      </VStack>\r\n    </Container>\r\n  )\r\n}","import { ChakraProvider } from '@chakra-ui/react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { Header } from './components/Header'\nimport { theme } from './theme'\nimport { Login } from './components/Login'\nimport { Home } from './components/Home'\nimport { Editor } from './components/Editor'\nimport { AuthProvider } from './contexts/authContext'\nimport { ContentsProvider } from './contexts/contentsContext'\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ChakraProvider theme={theme}>\n        <ContentsProvider>\n          <Router>\n            <Header />\n            <Switch>\n              <Route exact path='/'>\n                <Home />\n              </Route>\n              <Route path='/editor'>\n                <Editor />\n              </Route>\n              <Route path='/login'>\n                <Login />\n              </Route>\n            </Switch>\n          </Router>\n        </ContentsProvider>\n      </ChakraProvider>\n    </AuthProvider>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}